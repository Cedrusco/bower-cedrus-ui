/*!
 * Cedrus UI
 * https://github.com/cedrusco/cedrus-ui
 * @license Copyright Cedrus 2015
 * v0.2.19
 */
!function(e,t,n){"use strict";!function(){t.module("cedrus.ui",["ng","ngAnimate","ngAria","cedrus.ui.core"])}(),function(){var e;!function(e){t.module("cedrus.ui.core",["ngMaterial"])}(e||(e={}))}(),function(){var e;!function(e){function n(e,t,n){t.setDefaultDateFormat("MM/dd/yyyy")}n.$inject=["$provide","$cedrusUIConfigProvider","$mdThemingProvider"],t.module("cedrus.ui.core").config(n)}(e||(e={}))}(),function(){var e;!function(e){var n=function(){function e(){}return e.capitalize=function(e,t){function n(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()}var a=t?/([^\W_]+[^\s-]*) */g:/([^\W_]+[^\s-]*)/;return e?e.replace(a,n):""},e}();t.module("cedrus.ui.core").filter("capitalize",n.capitalize)}(e||(e={}))}(),function(){var e;!function(e){var n=function(){function e(){this.CSS={SAMPLE:"1"}}return e}();t.module("cedrus.ui.core").factory("$cedrusConstant",function(){return new n})}(e||(e={}))}(),function(){var e;!function(e){var n=function(){function e(){}return e.normalizeCamelCase=function(e,t){var n=e.replace(/([a-z])([A-Z])/g,"$1 $2");return n},e}();t.module("cedrus.ui.core").filter("normalizeCamelCase",n.normalizeCamelCase)}(e||(e={}))}(),function(){var e;!function(e){var n=function(){function e(){this._UI_DEFAULT_DATE_FORMAT="MM/dd/yyyy",this.dateFormat=this._UI_DEFAULT_DATE_FORMAT}return e.prototype.$get=function(){return{getDateFormat:this.getDefaultDateFormat}},e.prototype.setDefaultDateFormat=function(e){this.dateFormat=e||this._UI_DEFAULT_DATE_FORMAT},e.prototype.getDefaultDateFormat=function(){return this.dateFormat||this._UI_DEFAULT_DATE_FORMAT},e}();e.UIConfigProvider=n,t.module("cedrus.ui.core").provider("$cedrusUIConfig",n)}(e||(e={}))}(),function(){var n;!function(n){var a=function(){function n(){this.isDebug=!0,this.now=e.performance?t.bind(e.performance,e.performance.now):Date.now||function(){return(new Date).getTime()}}return n.prototype.log=function(){for(var t=[],n=0;n<arguments.length;n++)t[n-0]=arguments[n];e.isDebug&&console.debug.apply(console,["Cedrus UI:"].concat(t))},n.prototype.time=function(e){var t=this.now();return e(),this.now()-t},n}();t.module("cedrus.ui.core").factory("$cedrusUtil",function(){return a})}(n||(n={}))}(),function(){t.module("cedrus.ui").run(["$templateCache",function(e){e.put("components/calendar/calendar.tpl.html",'<div class="container"><div class="hider" ng-click="vm.displayCal()" ng-show="vm.showCal"></div><div class="input-blocker" ng-click="vm.displayCal()" readonly="true"></div><input type="text" class="md-select" ng-model="vm.selection"><div ng-show="vm.showCal" class="panel"><div class="md-whiteframe-2dp"><div class="yearrow" layout="row" layout-align="space-between end"><md-button class="calbtn" ng-click="vm.setYear(-1)" ng-hide="vm.yearSel" aria-label="previous year"><i class="fa fa-chevron-left"></i></md-button><md-button class="calbtn" ng-click="vm.setYear(-12)" ng-show="vm.yearSel" aria-label="go back one page"><i class="fa fa-chevron-left"></i></md-button><md-button class="calbtn yearbtn" ng-click="vm.flipCal()" aria-label="swap between month and year select">{{vm.date.selYear || vm.initYear}}</md-button><md-button class="calbtn" ng-click="vm.setYear(1)" ng-hide="vm.yearSel" aria-label="next year"><i class="fa fa-chevron-right"></i></md-button><md-button class="calbtn" ng-click="vm.setYear(12)" ng-show="vm.yearSel" aria-label="go forward by one page"><i class="fa fa-chevron-right"></i></md-button></div><div layout="row" ng-repeat="monthRow in vm.monthMap" ng-hide="vm.yearSel"><md-button class="calbtn monthSelect" ng-repeat="month in monthRow" ng-click="vm.setMonth(month.value)" aria-label="choose {{month.value}}">{{month.display}}</md-button></div><div layout="row" ng-repeat="yearRow in vm.yearMap" ng-show="vm.yearSel"><md-button class="calbtn yearSelect" ng-repeat="year in yearRow" ng-click="vm.flipCal(); vm.setYear(year)" aria-label="choose {{year}}">{{(vm.date.selYear||vm.initYear)+year}}</md-button></div></div></div></div>'),e.put("components/date-range-picker/date-range-picker.tpl.html",'<div ng-form="vm.form"><md-datepicker name="startDate" ng-model="vm.startDate" ng-change="vm.onDatepickerChange(vm.startDate, vm.endDate)" ng-required="vm.shouldRequire(vm.useDateRange, vm.endDate)" md-placeholder="{{ vm.startPlaceholder(vm.useDateRange) }}" md-min-date="vm.options.startDate.min || false" md-max-date="vm.endDate || vm.options.startDate.max || false" class="startDate"></md-datepicker><md-datepicker ng-show="vm.useDateRange" name="endDate" ng-model="vm.endDate" ng-change="vm.onDatepickerChange(vm.startDate, vm.endDate)" ng-required="vm.shouldRequire(vm.useDateRange, vm.startDate)" md-placeholder="{{ vm.options.endDate.placeholder }}" md-min-date="vm.startDate" md-max-date="vm.options.endDate.max" class="last-datepicker"></md-datepicker></div><a ng-click="vm.toggleDateRange(vm.form)">{{ vm.getToggleDateRangeText(vm.useDateRange) }}</a><div class="error-div" ng-if="vm.useDateRange && vm.form.$error && vm.parentFormSubmitted"><span ng-if="vm.form.startDate.$error.required">{{ vm.options.errorMessages.startRequired }} </span><span ng-if="vm.form.endDate.$error.required">{{ vm.options.errorMessages.endRequired }}</span></div>'),e.put("components/grouped-bar-chart/grouped-bar-chart.tpl.html",'<div class="cd-grouped-bar-chart"><div ng-hide="vm.showData()"><div layout="row" layout-fill layout-align="center center" class="no-data"><span>There are no active tasks.</span></div></div><div ng-show="vm.showData()"><div ng-repeat="group in vm.groupDataKeys"><div layout="row" class="group-item"><div layout="column"><md-icon ng-hide="vm.expandField(group)" md-font-icon="fa fa-caret-right" ng-click="vm.setExpandedField(group)" ng-if="vm.options.subFields"></md-icon><md-icon ng-show="vm.expandField(group)" md-font-icon="fa fa-caret-down" ng-click="vm.setExpandedField(group, true)" ng-if="vm.options.subFields"></md-icon></div><div layout="column" flex><div layout="row" layout-align="space-around none"><div flex="60" layout-align="start center">{{group}}</div><div flex="20">Count: {{vm.groupData[group].length}}</div><div flex="20">{{vm.groupData[group].length*100/vm.totalKeys | number:0}}%</div></div></div></div><div layout="row" flex class="line-color"><div ng-style="{width:vm.groupData[group].length*100/vm.totalKeys + \'%\', \'background\': vm.getColor($index, group)}" class="red-line"></div></div><div class="data-container" ng-show="vm.expandField(group)"><div layout="column" ng-show="vm.expandField(group)" ng-if="vm.options.subFields"><div ng-repeat="el in vm.groupData[group]"><div ng-include="vm.options.extendedTemplate || \'lineChartSingleItemExpanded\'"></div></div></div></div></div><div layout="row" layout-align="end none" class="total">Total Count:{{vm.totalKeys}}</div></div></div><script type="text/ng-template" id="lineChartSingleItemExpanded"><div class="panel" layout="column" layout-align="center none">\n        <div layout="row" layout-align="space-between none" class="data-row">\n            <div ng-repeat="(field, displayText ) in vm.options.subFields">\n                <span class="bold-text">{{displayText}}</span>\n                <span>{{el[field]}}</span>\n            </div>\n        </div>\n    </div></script>'),e.put("components/sidebar-filter/sidebar-filter.tpl.html",'<!--implemenation for user provided custom type/templates--><!--change naming to filter-tree, side-filter towards end--><div class="cd-sidebar-filter"><div ng-repeat="group in vm.filterGroups track by $index" ng-class="(vm.groupLevelClasses + (group.customClass ? \' \' + group.customClass : \'\') )"><div ng-if="!vm.options.isFlat"><md-button ng-click="vm.toggleExpand(group)" class="md-icon-button" aria-label="expand"><md-icon md-font-set="fa" md-font-icon="fa-chevron-right" ng-class="(group.isExpanded  !== false )? \'fa-chevron-down\': \'fa-chevron-right\'"></md-icon></md-button><span>{{ ::vm.processTitle(group, 0) }}</span></div><ul ng-show="group.isExpanded !== false" layout="column" ng-repeat="(filterName, filter) in vm.filters[group.key] track by filterName" ng-class="(vm.filterLevelClasses + (filter.customClass ? \' \' + filter.customClass : \'\'))" ng-class="{ cdFilterFlat : vm.options.isFlat}"><li><div><md-button ng-click="vm.toggleExpand(filter)" class="md-icon-button" aria-label="expand"><md-icon md-font-set="fa" md-font-icon="fa-chevron-right" ng-class="(filter.isExpanded  !== false )? \'fa-chevron-down\': \'fa-chevron-right\'"></md-icon></md-button><span>{{::vm.processTitle(filter, 1)}}</span><ul ng-show="filter.isExpanded !== false"><div ng-if="filter.type === \'checkbox\'" ng-include="\'cdCheckBoxFilter\'"></div><div ng-if="filter.type !== \'checkbox\'" ng-include="vm.customFields[filter.type].template"></div></ul></div></li></ul></div></div><script type="text/ng-template" id="cdCheckBoxFilter"><li ng-repeat="(optionName, option) in filter.options track by optionName" ng-class="(vm.optionLevelClasses + (option.customClass ? \' \' + option.customClass : \'\'))">\n        <md-checkbox ng-model="option.isSelected" ng-change="vm.changeFilter(filter, optionName, $index)" class="md-primary" ng-model-options="{debounce: 250}"\n            aria-label="{{::vm.processTitle(option, 2)}}">\n            <span>{{::vm.processTitle(option, 2)}}</span>\n        </md-checkbox>\n    </li></script>')}])}()}(window,window.angular),window.cedrusUI={version:{full:"0.2.19"}};